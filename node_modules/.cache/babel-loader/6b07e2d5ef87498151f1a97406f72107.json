{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah\\\\Desktop\\\\Github repo\\\\ReactProject\\\\project-react\\\\src\\\\App.js\";\n//////////////////////////////////////////WORKING TRY///////////////////////////////////////////\nimport React from \"react\"; // We use Route in order to define the different routes of our application\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"; // We import all the components we need in our app\n\nimport Navbar from \"./components/navbar\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\nimport Login from \"./components/login\";\nimport Welcome from \"./components/Welcome\";\nimport RecordList from \"./components/recordList\";\nimport Nav from \"./components/nav\";\nimport Home from \"./components/Home\";\nimport SimpleMap from \"./components/SimpleMap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <Navbar />\n    //   <Route exact path=\"/\">\n    //     <RecordList />\n    //   </Route>\n    //   <Route path=\"/edit/:id\" component={Edit} />\n    //   <Route path=\"/create\">\n    //     <Create />\n    //   </Route>\n    // </div>\n    // <div>\n    //   {/* <Route exact path=\"/\"> */}\n    //     <Create/>\n    //   {/* </Route> */}\n    // </div>\n    _jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            exact: true,\n            component: Create\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/Welcome\",\n            component: Welcome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/SimpleMap\",\n            component: SimpleMap\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 1\n    }, this)\n  );\n};\n\n_c = App;\nexport default App; ////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////FIRST TRY/////////////\n// import { observer } from 'mobx-react';\n// import userStore from './stores/userStore';\n// import LoginForm from './stores/LogginForm';\n// import InputField from './stores/InputField';\n// import SubmitButton from './stores/SubmitButton';\n// import axios from \"axios\";\n// import './App.css';\n// import React from 'react';\n// //import { arrayExtensions } from 'mobx/dist/internal';\n// class App extends React.Component {\n//   async componentDidMount(){\n//     // userStore.isLoggedin =true;\n//     // userStore.username = \"Aviya\";\n//     // userStore.password = \"ohwell\";\n//     // axios.post('http://localhost:4000/app/signup', userStore);\n//     try {\n//       let res = await fetch('/isLoggedin', {\n//         method: 'post',\n//         headers: {\n//           'Accept' : 'application/json',\n//           'Content-type' : 'application/json'\n//         }\n//       });\n//     let result = await res.json();\n//     if(result && result.success) {\n//       userStore.loading = false;\n//       userStore.isLoggedin = true;\n//       userStore.username = result.username;\n//      axios.post('http://localhost:4000/app/signup', userStore);\n//     }\n//     else\n//     {\n//       userStore.loading = false;\n//       userStore.isLoggedin = false;\n//     }\n//     }\n// catch(e) {\n//   userStore.loading = false;\n//   userStore.isLoggedin = false;\n//   }\n// }\n// async doLogout(){\n//   try {\n//     let res = await fetch('/logout', {\n//       method: 'post',\n//       headers: {\n//         'Accept' : 'application/json',\n//         'Content-Type' : 'application/json'\n//       }\n//     });\n//   let result = await res.json();\n//   if(result && result.success) {\n//     userStore.isLoggedin = false;\n//     userStore.username = '';\n//   }\n//   }\n// catch(e) {\n// console.log(e)\n// }\n// }\n//   render()\n//   {\n//     if(userStore.loading) {\n//       return (\n//         <div className='app'>\n//           <div className='container'>\n//           Loading, please wait...\n//           </div>\n//         </div>\n//       );\n//     }\n//     else {\n//       if(userStore.isLoggedin) {\n//         return (\n//           <div className='app'>\n//             <div className='container'>\n//             Welcome {userStore.username}\n//             <SubmitButton\n//             text={'log out'}\n//             disabled={false}\n//             onClick={ () => this.doLogout()}\n//             />\n//             </div>\n//           </div>\n//         );\n//      }\n//     }\n//     return (\n//       <div className=\"app\">\n//          <div className='container'>\n//            <LoginForm />\n//            </div>\n//       </div>\n//     );  \n//     }\n// }\n// export default observer(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/sarah/Desktop/Github repo/ReactProject/project-react/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","Navbar","Edit","Create","Login","Welcome","RecordList","Nav","Home","SimpleMap","App"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAsD,kBAAtD,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAChB;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACJ,YAAC,MAAD;AAAA,6BACI;AAAA,gCAEE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGC,QAAC,MAAD;AAAA,kCAGD,QAAC,KAAD;AAAQ,YAAA,IAAI,EAAC,WAAb;AAAyB,YAAA,KAAK,MAA9B;AAA+B,YAAA,SAAS,EAAEP;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAHC,eAID,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,QAAlB;AAA2B,YAAA,SAAS,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAJC,eAKD,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,UAAlB;AAA6B,YAAA,SAAS,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,kBALC,eAMD,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,YAAlB;AAA+B,YAAA,SAAS,EAAEI;AAA1C;AAAA;AAAA;AAAA;AAAA,kBANC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAjBE;AAmCD,CApCD;;KAAMC,G;AAsCN,eAAeA,GAAf,C,CAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AAEA;AAKA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA","sourcesContent":["//////////////////////////////////////////WORKING TRY///////////////////////////////////////////\nimport React from \"react\";\n\n// We use Route in order to define the different routes of our application\nimport {BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// We import all the components we need in our app\nimport Navbar from \"./components/navbar\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\nimport Login from \"./components/login\";\nimport Welcome from \"./components/Welcome\";\nimport RecordList from \"./components/recordList\";\nimport Nav from \"./components/nav\";\nimport Home from \"./components/Home\";\nimport SimpleMap from \"./components/SimpleMap\";\nconst App = () => {\n  return (\n    // <div>\n    //   <Navbar />\n    //   <Route exact path=\"/\">\n    //     <RecordList />\n    //   </Route>\n    //   <Route path=\"/edit/:id\" component={Edit} />\n    //   <Route path=\"/create\">\n    //     <Create />\n    //   </Route>\n    // </div>\n    // <div>\n    //   {/* <Route exact path=\"/\"> */}\n      \n    //     <Create/>\n    //   {/* </Route> */}\n    // </div>\n<Router>\n    <div>\n       {/* <SimpleMap/> */}\n      <Nav/>\n     <Switch>\n     {/* <Route path=\"/\" exact component={Home}/> */}\n     \n    <Route  path=\"/register\" exact component={Create}/>\n    <Route exact path=\"/login\" component={Login}/>\n    <Route exact path=\"/Welcome\" component={Welcome}/>\n    <Route exact path=\"/SimpleMap\" component={SimpleMap}/>\n    </Switch>\n    </div>\n\n</Router>\n    \n\n  );\n};\n\nexport default App;\n\n////////////////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////////////////////FIRST TRY/////////////\n// import { observer } from 'mobx-react';\n\n// import userStore from './stores/userStore';\n// import LoginForm from './stores/LogginForm';\n// import InputField from './stores/InputField';\n// import SubmitButton from './stores/SubmitButton';\n\n// import axios from \"axios\";\n// import './App.css';\n// import React from 'react';\n// //import { arrayExtensions } from 'mobx/dist/internal';\n\n\n\n// class App extends React.Component {\n\n//   async componentDidMount(){\n//     // userStore.isLoggedin =true;\n//     // userStore.username = \"Aviya\";\n//     // userStore.password = \"ohwell\";\n//     // axios.post('http://localhost:4000/app/signup', userStore);\n//     try {\n\n//       let res = await fetch('/isLoggedin', {\n\n//         method: 'post',\n//         headers: {\n          \n//           'Accept' : 'application/json',\n//           'Content-type' : 'application/json'\n//         }\n//       });\n\n//     let result = await res.json();\n      \n//     if(result && result.success) {\n\n//       userStore.loading = false;\n//       userStore.isLoggedin = true;\n//       userStore.username = result.username;\n//      axios.post('http://localhost:4000/app/signup', userStore);\n//     }\n\n//     else\n//     {\n//       userStore.loading = false;\n//       userStore.isLoggedin = false;\n//     }\n\n\n\n//     }\n\n// catch(e) {\n\n//   userStore.loading = false;\n//   userStore.isLoggedin = false;\n//   }\n\n// }\n\n\n\n\n// async doLogout(){\n\n//   try {\n\n//     let res = await fetch('/logout', {\n\n//       method: 'post',\n//       headers: {\n//         'Accept' : 'application/json',\n//         'Content-Type' : 'application/json'\n//       }\n//     });\n\n//   let result = await res.json();\n\n//   if(result && result.success) {\n\n//     userStore.isLoggedin = false;\n//     userStore.username = '';\n//   }\n\n//   }\n\n// catch(e) {\n\n// console.log(e)\n// }\n\n// }\n\n\n\n//   render()\n//   {\n\n//     if(userStore.loading) {\n//       return (\n//         <div className='app'>\n//           <div className='container'>\n//           Loading, please wait...\n//           </div>\n//         </div>\n//       );\n//     }\n\n//     else {\n\n//       if(userStore.isLoggedin) {\n\n//         return (\n//           <div className='app'>\n//             <div className='container'>\n//             Welcome {userStore.username}\n\n//             <SubmitButton\n//             text={'log out'}\n//             disabled={false}\n//             onClick={ () => this.doLogout()}\n            \n//             />\n\n//             </div>\n//           </div>\n//         );\n//      }\n      \n//     }\n\n//     return (\n//       <div className=\"app\">\n//          <div className='container'>\n               \n//            <LoginForm />\n//            </div>\n//       </div>\n//     );  \n//     }\n\n    \n// }\n\n// export default observer(App);\n"]},"metadata":{},"sourceType":"module"}